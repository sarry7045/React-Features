{"version":3,"sources":["Components/Navbar.jsx","Components/Home.jsx","Components/IdleTimeContainer.jsx","Components/CreditCard.jsx","Components/VideoPlayer.jsx","Components/Charts.jsx","Components/TextError.js","Components/NewFormik.jsx","Components/Input.jsx","Components/TextArea.jsx","Components/Select.jsx","Components/RadioButtons.jsx","Components/CheckboxGroup.jsx","Components/DatePicker.jsx","Components/FormikControl.jsx","Components/FormikContainer.jsx","Components/Formik.jsx","Components/FormikRegistration.jsx","Components/FormikEnrollment.jsx","Components/FormikLogin.jsx","App.js","index.js"],"names":["Navbar","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","toast","configure","Modal","setAppElement","Home","useState","modalIsOpen","setModalIsOpen","color","size","onClick","position","POSITION","TOP_LEFT","autoClose","success","TOP_RIGHT","info","TOP_CENTER","error","BOTTOM_CENTER","isOpen","onRequestClose","content","end","duration","start","prefix","decimals","IdleTimerContainer","isLoggedIn","setIsLoggedIn","idleTimerRef","useRef","sessionTimeoutRef","logOut","clearTimeout","current","console","log","ref","timeout","onIdle","setTimeout","CreditCard","number","setNumber","name","setName","expiry","setExpiry","cvc","setCvc","focus","setFocus","selectedDate","setSelectedDate","focused","placeholder","value","onChange","e","target","onFocus","selected","date","placeholderText","minDate","Date","isClearable","showYearDropdown","scrollableMonthYearDropdown","VideoPlayer","width","height","controls","url","Charts","options","title","display","text","scales","yAxes","ticks","min","max","stepSize","data","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","TextError","props","children","initialValues","email","channel","comments","address","social","facebook","twitter","phoneNumbers","phNumbers","savedValues","onSubmit","values","submitProps","setSubmitting","resetForm","validationSchema","Yup","required","validateComments","NewFormik","formValues","setFormValues","enableReinitialize","formik","htmlFor","component","as","validate","field","meta","form","touched","fieldArrayProps","push","remove","map","phNumber","index","disabled","isValid","isSubmitting","Input","rest","Textarea","Select","option","key","RadioButtons","Fragment","checked","CheckboxGroup","includes","DatePicker","setFieldValue","val","FormikControl","control","FormikContainer","dropdownOptions","radioOptions","checkboxOptions","description","selectOption","radioOption","checkboxOption","birthDate","nullable","JSON","parse","stringify","Formik","useFormik","handleSubmit","handleChange","onBlur","handleBlur","errors","FormikRegistration","password","confirmPassword","oneOf","modeOfContact","phone","when","is","then","FormikEnrollment","bio","course","courseDate","skills","FormikLogin","App","direction","exact","path","IdleTimeContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fe53c73.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            React-Features\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/idletimecontainer\"\r\n                >\r\n                  Idle Timer\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/creditcard\"\r\n                >\r\n                  Credit Card, Date Picker, Loading Indicator\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/videoplayer\"\r\n                >\r\n                  Video Player\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/charts\"\r\n                >\r\n                  Charts\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/formik\"\r\n                >\r\n                  Formik\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/formiklogin\"\r\n                >\r\n                  FormikLogin\r\n                </Link>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/newformik\"\r\n                >\r\n                  NewFormikk\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/formikcontainer\"\r\n                >\r\n                  FormikContainer\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { FaReact } from \"react-icons/fa\";\r\nimport { DiAngularSimple } from \"react-icons/di\";\r\nimport { DiApple } from \"react-icons/di\";\r\nimport { DiCodeBadge } from \"react-icons/di\";\r\nimport { DiVisualstudio } from \"react-icons/di\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Modal from \"react-modal\";\r\n\r\nimport Tippy from \"@tippy.js/react\";\r\nimport \"tippy.js/dist/tippy.css\";\r\n\r\nimport Countup from \"react-countup\";\r\n\r\ntoast.configure();\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction Home() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const notify = () => {\r\n    toast(\"Basic Notification!\", {\r\n      position: toast.POSITION.TOP_LEFT,\r\n      autoClose: 7000,\r\n    });\r\n    toast.success(\"Success Notification!\", {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n    });\r\n    toast.info(\"Info Notification!\", { position: toast.POSITION.TOP_CENTER });\r\n    toast.error(\"Error Notification!\", {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container text-center my-4\">\r\n      <h3 className=\"text-center\">React Icons:-</h3>\r\n        <FaReact color=\"lightblue\" size=\"5rem\" />\r\n        <DiAngularSimple color=\"red\" size=\"5em\" />\r\n        <DiApple color=\"black\" size=\"5rem\" />\r\n        <DiCodeBadge color=\"orange\" size=\"5rem\" />\r\n        <DiVisualstudio color=\"blue\" size=\"5rem\" />\r\n      </div>\r\n\r\n      <div className=\"container text-center my-4\">\r\n      <h5 className=\"text-center my-2\">React Notify:-</h5>\r\n        <button type=\"button\" onClick={notify} className=\"btn btn-primary\">\r\n          Notify!\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container text-center my-4\">\r\n      <h5 className=\"text-center my-2\">React Open Modal:-</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setModalIsOpen(true)}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Open Modal\r\n        </button>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={() => setModalIsOpen(false)}\r\n        >\r\n          <h2 className=\"container text-center\">Modal Title</h2>\r\n          <p className=\"container text-center\">Modal Body</p>\r\n          <div className=\"container text-center my-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setModalIsOpen(false)}\r\n              className=\"btn btn-primary text-center\"\r\n            >\r\n              Close Modal\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div className=\"container my-4 text-center\">\r\n      <h5 className=\"text-center my-2\">React Tippy:-</h5>\r\n        <Tippy content=\"Basic Tooltip\">\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Hover\r\n          </button>\r\n        </Tippy>\r\n      </div>\r\n\r\n      <div className=\"container my-4 text-center\">\r\n      <h5 className=\"text-center my-2\">React Countup:-</h5>\r\n        <h1 className=\"my-1\">\r\n          <Countup end={200} />\r\n        </h1>\r\n        <br />\r\n        <h1 className=\"my-1\">\r\n          <Countup end={200} duration={2} />\r\n        </h1>\r\n        <br />\r\n        <h1 className=\"my-1\">\r\n          <Countup start={500} end={1000} duration={2} />\r\n        </h1>\r\n        <br />\r\n        <h1>\r\n          <Countup end={1000} duration={3} prefix=\"$\" decimals={2} />\r\n        </h1>\r\n        <br />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useRef } from \"react\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction IdleTimerContainer() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const idleTimerRef = useRef(null);\r\n  const sessionTimeoutRef = useRef(null);\r\n  const onIdle = () => {\r\n    console.log(\"User is idle\");\r\n    setModalIsOpen(true);\r\n    sessionTimeoutRef.current = setTimeout(logOut, 5000);\r\n  };\r\n\r\n  const logOut = () => {\r\n    setModalIsOpen(false);\r\n    setIsLoggedIn(false);\r\n    clearTimeout(sessionTimeoutRef.current);\r\n    console.log(\"User has been logged out\");\r\n  };\r\n  const stayActive = () => {\r\n    setModalIsOpen(false);\r\n    clearTimeout(sessionTimeoutRef.current);\r\n    console.log(\"User is active\");\r\n  };\r\n  return (\r\n    <div className=\"container my-4 text-center\">\r\n      {isLoggedIn ? <h2>Hello Suraj Yadav</h2> : <h2>Hello Guest</h2>}\r\n      <IdleTimer ref={idleTimerRef} timeout={1000} onIdle={onIdle} />\r\n      <Modal isOpen={modalIsOpen}>\r\n        <h2 className=\"container my-2 text-center\">\r\n          You've been idle for a while!\r\n        </h2>\r\n        <p className=\"container my-2 text-center\">\r\n          You will be logged out soon\r\n        </p>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 text-center\"\r\n            onClick={logOut}\r\n          >\r\n            Log me out\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 text-center\"\r\n            onClick={stayActive}\r\n          >\r\n            Keep me signed in\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IdleTimerContainer;\r\n","import React, { useState } from \"react\";\r\nimport Cards from \"react-credit-cards\";\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../Components/CreditCard.css\";\r\n\r\n\r\nimport {\r\n  BounceLoader,\r\n  BarLoader,\r\n  BeatLoader,\r\n  DotLoader,\r\n  ScaleLoader,\r\n  RingLoader,\r\n  HashLoader,\r\n} from \"react-spinners\";\r\n\r\nfunction CreditCard() {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [cvc, setCvc] = useState(\"\");\r\n  const [focus, setFocus] = useState(\"\");\r\n\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  return (\r\n    <div className=\"container my-2 text-center\">\r\n     <h4 className=\"text-center my-3\">React Credit Card:-</h4>\r\n      {/* <h2 className=\"container text-center my-3\">Credit Card</h2> */}\r\n      <Cards\r\n        number={number}\r\n        name={name}\r\n        expiry={expiry}\r\n        cvc={cvc}\r\n        focused={focus}\r\n      />\r\n\r\n      <form className=\"container my-4 text-center\">\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Card Number\"\r\n          value={number}\r\n          onChange={(e) => setNumber(e.target.value)}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n        />\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n        />\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"text\"\r\n          name=\"expiry\"\r\n          placeholder=\"MM/YY Expiry\"\r\n          value={expiry}\r\n          onChange={(e) => setExpiry(e.target.value)}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n        />\r\n        <input\r\n          className=\"mx-2\"\r\n          type=\"tel\"\r\n          name=\"cvc\"\r\n          placeholder=\"CVC\"\r\n          value={cvc}\r\n          onChange={(e) => setCvc(e.target.value)}\r\n          onFocus={(e) => setFocus(e.target.name)}\r\n        />\r\n      </form>\r\n\r\n      <h5 className=\"text-center my-2\">React Date-Picker:-</h5>\r\n      <div className=\" text-center\">\r\n        <DatePicker\r\n          selected={selectedDate}\r\n          onChange={(date) => setSelectedDate(date)}\r\n          placeholderText=\"Date:-\"\r\n          minDate={new Date()}\r\n          isClearable\r\n          showYearDropdown\r\n          scrollableMonthYearDropdown\r\n        />\r\n      </div>\r\n\r\n      <div className=\"container my-5 text-center\">\r\n      \r\n      <h5 className=\"text-center my-4\">React Spinners:-</h5>\r\n        <div className=\"spinner\">\r\n          <BounceLoader color=\"#295FFF\" />\r\n          <BarLoader color=\"#295FFF\" />\r\n          <BeatLoader color=\"#295FFF\" />\r\n          <DotLoader color=\"#295FFF\" />\r\n          <ScaleLoader color=\"#295FFF\" />\r\n          <RingLoader color=\"#295FFF\" />\r\n          <HashLoader color=\"#295FFF\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreditCard;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst VideoPlayer = () => {\r\n  return (\r\n    <div className=\"container text-center my-4\">\r\n      <h5 className=\"text-center my-2\">React VideoPlayer:-</h5>\r\n      <ReactPlayer\r\n        width=\"400px\"\r\n        height=\"200px\"\r\n        controls\r\n        className=\"container text-center my-4\"\r\n        url=\"https://www.youtube.com/watch?v=AETFvQonfV8  \"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React from \"react\";\r\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction Charts() {\r\n  const data = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales 2020 (M)\",\r\n        data: [3, 2, 2, 1, 5],\r\n        borderColor: [\"rgba(255, 206, 86, 0.2)\"],\r\n        backgroundColor: [\"rgba(255, 206, 86, 0.2)\"],\r\n        pointBackgroundColor: \"rgba(255, 206, 86, 0.2)\",\r\n        pointBorderColor: \"rgba(255, 206, 86, 0.2)\",\r\n      },\r\n      {\r\n        label: \"Sales 2019 (M)\",\r\n        data: [1, 3, 2, 2, 3],\r\n        borderColor: [\"rgba(54, 162, 235, 0.2)\"],\r\n        backgroundColor: [\"rgba(54, 162, 235, 0.2)\"],\r\n        pointBackgroundColor: \"rgba(54, 162, 235, 0.2)\",\r\n        pointBorderColor: \"rgba(54, 162, 235, 0.2)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const dataa = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales 2020 (M)\",\r\n        data: [3, 2, 2, 6, 4],\r\n        borderColor: [\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n        ],\r\n        backgroundColor: [\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n        ],\r\n      },\r\n      {\r\n        label: \"Sales 2019 (M)\",\r\n        data: [4, 3, 2, 2, 3],\r\n        borderColor: [\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n        ],\r\n        backgroundColor: [\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const dataaa = {\r\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\"],\r\n    datasets: [\r\n      {\r\n        label: \"Sales 2020 (M)\",\r\n        data: [3, 2, 2, 6, 4],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(255, 205, 86, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: \"Line Chart\",\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: 6,\r\n            stepSize: 1,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const optionss = {\r\n    title: {\r\n      display: true,\r\n      text: \"Doughnut Chart\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <h3 className=\"text-center my-4\">React Charts:-</h3>\r\n      <div className=\"container text-center my-3\">\r\n        <Bar data={dataa} options={options} />\r\n      </div>\r\n\r\n      <div className=\"container text-center my-5\">\r\n        <Doughnut data={dataaa} options={optionss} />\r\n      </div>\r\n      <div className=\"container text-center my-5\">\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport \"../Components/FormikContainer.css\";\r\n\r\nfunction TextError(props) {\r\n  return <div className=\"error\">{props.children}</div>;\r\n}\r\n\r\nexport default TextError;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage,\r\n  FieldArray,\r\n  FastField,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextError from \"./TextError\";\r\nimport \"../Components/Formik.css\";\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  channel: \"\",\r\n  comments: \"\",\r\n  address: \"\",\r\n  social: {\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n  },\r\n  phoneNumbers: [\"\", \"\"],\r\n  phNumbers: [\"\"],\r\n};\r\n\r\nconst savedValues = {\r\n  name: \"Suraj Yadav\",\r\n  email: \"Suraj@example.com\",\r\n  channel: \"sarry7045\",\r\n  comments: \"Welcome to Formik Tutorial\",\r\n  address: \"Amboli Andheri\",\r\n  social: {\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n  },\r\n  phoneNumbers: [\"\", \"\"],\r\n  phNumbers: [\"\"],\r\n};\r\n\r\nconst onSubmit = (values, submitProps) => {\r\n  console.log(\"Form data\", values);\r\n  console.log(\"submitProps\", submitProps);\r\n  submitProps.setSubmitting(false);\r\n  submitProps.resetForm();\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n  channel: Yup.string().required(\"Required\"),\r\n  comments: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst validateComments = (value) => {\r\n  let error;\r\n  if (!value) {\r\n    error = \"Required\";\r\n  }\r\n  return error;\r\n};\r\n\r\nconst NewFormik = () => {\r\n  const [formValues, setFormValues] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"formik my-5 text-center\">\r\n        {\" \"}\r\n        <Formik\r\n          initialValues={formValues || initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n          enableReinitialize\r\n          // validateOnChange={false}\r\n          // validateOnBlur={false}\r\n          // validateOnMount\r\n        >\r\n          {(formik) => {\r\n            console.log(\"Formik props\", formik);\r\n            return (\r\n              <Form>\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Your Name\"\r\n                  />\r\n                  <ErrorMessage name=\"name\" component={TextError} />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Field\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Your Email\"\r\n                  />\r\n                  <ErrorMessage name=\"email\">\r\n                    {(error) => <div className=\"error\">{error}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"channel\">Channel</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"channel\"\r\n                    name=\"channel\"\r\n                    placeholder=\"YouTube channel name\"\r\n                  />\r\n                  <ErrorMessage name=\"channel\" />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"comments\">Comments</label>\r\n                  <Field\r\n                    as=\"textarea\"\r\n                    id=\"comments\"\r\n                    name=\"comments\"\r\n                    placeholder=\"Comments\"\r\n                    validate={validateComments}\r\n                  />\r\n                  <ErrorMessage name=\"comments\" component={TextError} />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"address\">Address</label>\r\n                  <FastField name=\"address\" placeholder=\"Address\">\r\n                    {({ field, form, meta }) => {\r\n                      // console.log('Field render')\r\n                      return (\r\n                        <div>\r\n                          <input type=\"text\" {...field} />\r\n                          {meta.touched && meta.error ? (\r\n                            <div>{meta.error}</div>\r\n                          ) : null}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  </FastField>\r\n                  <ErrorMessage name=\"email\" component={TextError} />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"address\">Address</label>\r\n                  <FastField\r\n                    as=\"textarea\"\r\n                    id=\"address\"\r\n                    name=\"address\"\r\n                    placeholder=\"Address\"\r\n                  >\r\n                    {(props) => {\r\n                      const { field, form, meta } = props;\r\n                      console.log(\"Render props\", props);\r\n                      return (\r\n                        <div>\r\n                          <input type=\"text\" id=\"address\" {...field} />\r\n                          {meta.touched && meta.error ? (\r\n                            <div>{meta.error}</div>\r\n                          ) : null}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  </FastField>\r\n                  <ErrorMessage name=\"email\" component={TextError} />{\" \"}\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"facebook\">Facebook profile</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"facebook\"\r\n                    name=\"social.facebook\"\r\n                    placeholder=\"FaceBook Profile\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"twitter\">Twitter profile</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"twitter\"\r\n                    name=\"social.twitter\"\r\n                    placeholder=\"Twitter Profile\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"primaryPh\">Primary phone number</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"primaryPh\"\r\n                    name=\"phoneNumbers[0]\"\r\n                    placeholder=\"Primary Phone Number\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label htmlFor=\"secondaryPh\">Secondary phone number</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"secondaryPh\"\r\n                    name=\"phoneNumbers[1]\"\r\n                    placeholder=\"Secondary Phone Number\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-controll\">\r\n                  <label>List of phone numbers</label>\r\n                  <FieldArray name=\"phNumbers\">\r\n                    {(fieldArrayProps) => {\r\n                      const { push, remove, form } = fieldArrayProps;\r\n                      const { values } = form;\r\n                      const { phNumbers } = values;\r\n                      // console.log('fieldArrayProps', fieldArrayProps)\r\n                      // console.log('Form errors', form.errors)\r\n\r\n                      return (\r\n                        <div>\r\n                          {phNumbers.map((phNumber, index) => (\r\n                            <div key={index}>\r\n                              <Field name={`phNumbers[${index}]`} />\r\n                              {index > 0 && (\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-success my-2 mx-2\"\r\n                                  onClick={() => remove(index)}\r\n                                >\r\n                                  -\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-success my-2\"\r\n                            onClick={() => push(\"\")}\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  </FieldArray>\r\n                </div>\r\n\r\n                {/* <button\r\n              type='button'\r\n              onClick={() => formik.validateField('comments')}\r\n            >\r\n              Validate comments\r\n            </button>\r\n            <button\r\n              type='button'\r\n              onClick={() => formik.setFieldTouched('comments')}\r\n            >\r\n              Visit comments\r\n            </button>\r\n            <button type='button' onClick={() => formik.validateForm()}>\r\n              Validate all\r\n            </button>\r\n            <button\r\n              type='button'\r\n              onClick={() =>\r\n                formik.setTouched({\r\n                  name: true,\r\n                  email: true,\r\n                  channel: true,\r\n                  comments: true\r\n                })\r\n              }\r\n            >\r\n              Visit all\r\n            </button> */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mx-4\"\r\n                  onClick={() => setFormValues(savedValues)}\r\n                >\r\n                  Load saved data\r\n                </button>\r\n                <button type=\"reset\" className=\"btn btn-primary mx-4\">\r\n                  Reset\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary mx-4\"\r\n                  disabled={!formik.isValid || formik.isSubmitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewFormik;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field id={name} name={name} {...rest} />\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Textarea(props) {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field as=\"textarea\" id={name} name={name} {...rest} />\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Textarea;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Select(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field as=\"select\" id={name} name={name} {...rest}>\r\n        {options.map((option) => {\r\n          return (\r\n            <option key={option.value} value={option.value}>\r\n              {option.key}\r\n            </option>\r\n          );\r\n        })}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction RadioButtons(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label>{label}</label>\r\n      <Field name={name}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                />\r\n                <label htmlFor={option.value}>{option.key}</label>\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadioButtons;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label>{label}</label>\r\n      <Field name={name}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value.includes(option.value)}\r\n                />\r\n                <label htmlFor={option.value}>{option.key}</label>\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup;\r\n","import React from \"react\";\r\nimport DateView from \"react-datepicker\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction DatePicker(props) {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field name={name}>\r\n        {({ form, field }) => {\r\n          const { setFieldValue } = form;\r\n          const { value } = field;\r\n          return (\r\n            <DateView\r\n              id={name}\r\n              {...field}\r\n              {...rest}\r\n              selected={value}\r\n              onChange={(val) => setFieldValue(name, val)}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport Input from \"./Input\";\r\nimport Textarea from \"../Components/TextArea\";\r\nimport Select from \"../Components/Select\";\r\nimport RadioButtons from \"./RadioButtons\";\r\nimport CheckboxGroup from \"./CheckboxGroup\";\r\nimport DatePicker from \"./DatePicker\";\r\n// import ChakraInput from './ChakraInput'\r\n\r\nfunction FormikControl(props) {\r\n  const { control, ...rest } = props;\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"textarea\":\r\n      return <Textarea {...rest} />;\r\n    case \"select\":\r\n      return <Select {...rest} />;\r\n    case \"radio\":\r\n      return <RadioButtons {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckboxGroup {...rest} />;\r\n    case \"date\":\r\n      return <DatePicker {...rest} />;\r\n    // case 'chakraInput':\r\n    //   return <ChakraInput {...rest} />\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default FormikControl;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"../Components/FormikControl\";\r\nimport \"../Components/FormikContainer.css\";\r\n\r\nfunction FormikContainer() {\r\n  const dropdownOptions = [\r\n    { key: \"Select an option\", value: \"\" },\r\n    { key: \"Option 1\", value: \"option1\" },\r\n    { key: \"Option 2\", value: \"option2\" },\r\n    { key: \"Option 3\", value: \"option3\" },\r\n  ];\r\n  const radioOptions = [\r\n    { key: \"Option 1\", value: \"rOption1\" },\r\n    { key: \"Option 2\", value: \"rOption2\" },\r\n    { key: \"Option 3\", value: \"rOption3\" },\r\n  ];\r\n  const checkboxOptions = [\r\n    { key: \"Option 1\", value: \"cOption1\" },\r\n    { key: \"Option 2\", value: \"cOption2\" },\r\n    { key: \"Option 3\", value: \"cOption3\" },\r\n  ];\r\n  const initialValues = {\r\n    email: \"\",\r\n    description: \"\",\r\n    selectOption: \"\",\r\n    radioOption: \"\",\r\n    checkboxOption: [],\r\n    birthDate: null,\r\n  };\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().required(\"Required\"),\r\n    description: Yup.string().required(\"Required\"),\r\n    selectOption: Yup.string().required(\"Required\"),\r\n    radioOption: Yup.string().required(\"Required\"),\r\n    checkboxOption: Yup.array().required(\"Required\"),\r\n    birthDate: Yup.date().required(\"Required\").nullable(),\r\n  });\r\n  const onSubmit = (values) => {\r\n    console.log(\"Form data\", values);\r\n    console.log(\"Saved data\", JSON.parse(JSON.stringify(values)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"FormikContainer container text-center my-4\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => (\r\n          <Form>\r\n            <div className=\"my-4\">\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"my-4\">\r\n              {\" \"}\r\n              <FormikControl\r\n                control=\"textarea\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <div className=\"my-4\">\r\n              <FormikControl\r\n                control=\"select\"\r\n                label=\"Select a topic\"\r\n                name=\"selectOption\"\r\n                options={dropdownOptions}\r\n              />\r\n            </div>\r\n            <div className=\"my-4\">\r\n              <FormikControl\r\n                control=\"radio\"\r\n                label=\"Radio topic\"\r\n                name=\"radioOption\"\r\n                options={radioOptions}\r\n              />\r\n            </div>\r\n            <div className=\"my-4\">\r\n              {\" \"}\r\n              <FormikControl\r\n                control=\"checkbox\"\r\n                label=\"Checkbox topics\"\r\n                name=\"checkboxOption\"\r\n                options={checkboxOptions}\r\n              />\r\n            </div>\r\n            <div className=\"my-4\">\r\n              <FormikControl\r\n                control=\"date\"\r\n                label=\"Pick a date\"\r\n                name=\"birthDate\"\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary text-center\">\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormikContainer;\r\n","import React from \"react\";\r\nimport \"../Components/Formik.css\";\r\nimport { useFormik, Form, Field } from \"formik\";\r\nimport { values } from \"lodash\";\r\nimport * as Yup from \"yup\";\r\nimport NewFormik from \"./NewFormik\";\r\nimport FormikContainer from \"./FormikContainer\";\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  channel: \"\",\r\n};\r\n\r\nconst onSubmit = (values) => {\r\n  console.log(\"Form data\", values);\r\n};\r\nconst validate = (values) => {\r\n  let errors = {};\r\n  if (!values.name) {\r\n    errors.name = \"Required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = \"Invalid Email Format\";\r\n  }\r\n  if (!values.channel) {\r\n    errors.channel = \"Required\";\r\n  }\r\n\r\n  return errors;\r\n};\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required(\"Required!\"),\r\n  email: Yup.string().email(\"Invalid Email Format!\").required(\"Required!\"),\r\n  channel: Yup.string().required(\"Required!\"),\r\n});\r\n\r\nconst Formik = () => {\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    // validate,\r\n    validationSchema,\r\n  });\r\n\r\n  console.log(\"Visited Feilds\", formik.touched);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-5\">\r\n        <div className=\"formik\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"form-controll\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.name}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {formik.touched.name && formik.errors.name ? (\r\n                <div className=\"error\">{formik.errors.name} </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-controll\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div className=\"error\">{formik.errors.email} </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-controll\">\r\n              <label htmlFor=\"channel\">Channel</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"channel\"\r\n                name=\"channel\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.channel}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {formik.touched.channel && formik.errors.channel ? (\r\n                <div className=\"error\">{formik.errors.channel} </div>\r\n              ) : null}\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary my-4 text-center\">\r\n              Submit Data\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <NewFormik />\r\n      <FormikContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Formik;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"./FormikControl\";\r\n\r\nfunction FormikRegistration() {\r\n  const options = [\r\n    { key: \"Email\", value: \"emailmoc\" },\r\n    { key: \"Telephone\", value: \"telephonemoc\" },\r\n  ];\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    modeOfContact: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), \"\"], \"Passwords must match\")\r\n      .required(\"Required\"),\r\n    modeOfContact: Yup.string().required(\"Required\"),\r\n    phone: Yup.string().when(\"modeOfContact\", {\r\n      is: \"telephonemoc\",\r\n      then: Yup.string().required(\"Required\"),\r\n    }),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(\"Form data\", values);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Form>\r\n            <div className=\"my-3\">\r\n              {\" \"}\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              {\" \"}\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"password\"\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <FormikControl\r\n                control=\"radio\"\r\n                label=\"Mode of contact\"\r\n                name=\"modeOfContact\"\r\n                options={options}\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"text\"\r\n                label=\"Phone number\"\r\n                name=\"phone\"\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary my-4\"\r\n              disabled={!formik.isValid}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default FormikRegistration;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"./FormikControl\";\r\n\r\nfunction FormikEnrollment() {\r\n  const dropdownOptions = [\r\n    { key: \"Select your course\", value: \"\" },\r\n    { key: \"React\", value: \"react\" },\r\n    { key: \"Angular\", value: \"angular\" },\r\n    { key: \"Vue\", value: \"vue\" },\r\n  ];\r\n\r\n  const checkboxOptions = [\r\n    { key: \"HTML\", value: \"html\" },\r\n    { key: \"CSS\", value: \"css\" },\r\n    { key: \"JavaScript\", value: \"javascript\" },\r\n  ];\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    bio: \"\",\r\n    course: \"\",\r\n    skills: [],\r\n    courseDate: null,\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n    bio: Yup.string().required(\"Required\"),\r\n    course: Yup.string().required(\"Required\"),\r\n    courseDate: Yup.date().required(\"Required\").nullable(),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(\"Form data\", values);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Form>\r\n            <div className=\"my-3\">\r\n              <FormikControl\r\n                control=\"input\"\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <FormikControl control=\"textarea\" label=\"Bio\" name=\"bio\" />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <FormikControl\r\n                control=\"select\"\r\n                label=\"Course\"\r\n                name=\"course\"\r\n                options={dropdownOptions}\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              <FormikControl\r\n                control=\"checkbox\"\r\n                label=\"Your skillset\"\r\n                name=\"skills\"\r\n                options={checkboxOptions}\r\n              />\r\n            </div>\r\n            <div className=\"my-3\">\r\n              {\" \"}\r\n              <FormikControl\r\n                control=\"date\"\r\n                label=\"Course date\"\r\n                name=\"courseDate\"\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary my-4\"\r\n              disabled={!formik.isValid}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default FormikEnrollment;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"./FormikControl\";\r\nimport FormikRegistration from \"./FormikRegistration\";\r\nimport FormikEnrollment from \"./FormikEnrollment\";\r\n\r\nfunction FormikLogin() {\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(\"Form data\", values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"FormikContainer container my-4 text-center\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => {\r\n          return (\r\n            <Form>\r\n              <FormikControl\r\n                control=\"input\"\r\n                // control='chakraInput'\r\n                type=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n              />\r\n\r\n              <div className=\"my-3\">\r\n                <FormikControl\r\n                  control=\"input\"\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary my-4\"\r\n                disabled={!formik.isValid}\r\n              >\r\n                Submit\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n     \r\n    </div>\r\n    <div className=\"FormikContainer container my-4\">\r\n        <FormikRegistration />\r\n      </div>\r\n      <div className=\"FormikContainer container my-4\">\r\n        {\" \"}\r\n        <FormikEnrollment />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormikLogin;\r\n","import Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\nimport IdleTimeContainer from \"./Components/IdleTimeContainer\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CreditCard from \"./Components/CreditCard\";\nimport VideoPlayer from \"./Components/VideoPlayer\";\nimport Charts from \"./Components/Charts\";\nimport Formik from \"./Components/Formik\";\nimport FormikLogin from \"./Components/FormikLogin\";\n// import NewFormik from \"./Components/NewFormik\";\n// import FormikContainer from \"./Components/FormikContainer\";\n// import {ThemeProvider, Theme} from \"@chakra-ui/core\"\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n\n       <strong> <marquee direction=\"left\">\n       In this project, I keep trying some cool and useful things from React.\n        </marquee></strong>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/idletimecontainer\">\n          <IdleTimeContainer />\n        </Route>\n        <Route exact path=\"/creditcard\">\n          <CreditCard />\n        </Route>\n        <Route exact path=\"/videoplayer\">\n          <VideoPlayer />\n        </Route>\n        <Route exact path=\"/charts\">\n          <Charts />\n        </Route>\n        {/* <ThemeProvider> */}\n        <Route exact path=\"/formik\">\n          <Formik />\n        </Route>\n        <Route exact path=\"/formiklogin\">\n          <FormikLogin />\n        </Route>\n        {/* </ThemeProvider> */}\n        {/* <Route exact path=\"/newformik\">\n          <NewFormik />\n        </Route>\n        <Route exact path=\"/formikcontainer\">\n          <FormikContainer />\n        </Route> */}\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}